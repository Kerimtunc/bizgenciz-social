name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (pnpm or npm)
        run: |
          if [ -f pnpm-lock.yaml ]; then npm i -g pnpm && pnpm i --frozen-lockfile; else npm ci || npm i; fi
        env:
          CI: true

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Save mcp-server-git logs (if any)
        if: always()
        run: |
          mkdir -p logs || true
          echo "No mcp-server-git logs collected in runner" > logs/mcp-server-git.txt

      - name: Skip tests (archived)
        run: echo "Tests archived. See docs/reference/tests-archive."

      - name: Docker build (smoke)
        run: docker build -t bizgenciz-social:ci .

      - name: Docker run (smoke) with health probe
        if: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' && secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY != '' && secrets.SUPABASE_SERVICE_ROLE_KEY != '' }}
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .ci.env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .ci.env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .ci.env
          if [ -n "${{ secrets.REDIS_URL }}" ]; then echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .ci.env; fi
          echo "PORT=3000" >> .ci.env
          docker run -d --name app -p 8080:3000 --env-file ./.ci.env bizgenciz-social:ci
          sleep 10
          curl -sf http://localhost:8080/api/health | tee docker-health.json
          docker logs app --tail 200 | sed -e 's/.*/[container] &/'
          docker rm -f app

