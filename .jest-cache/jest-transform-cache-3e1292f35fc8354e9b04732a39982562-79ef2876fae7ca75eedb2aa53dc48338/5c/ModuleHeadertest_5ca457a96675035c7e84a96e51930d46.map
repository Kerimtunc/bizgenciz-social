{"version":3,"sources":["C:\\kod\\cekirdek\\tests\\components\\ModuleHeader.test.tsx"],"sourcesContent":["import { render, screen } from '@testing-library/react'\r\nimport ModuleHeader from '../../components/common/ModuleHeader'\r\n\r\ndescribe('ModuleHeader', () => {\r\n  const defaultProps = {\r\n    title: 'Test Module',\r\n    subtitle: 'Test module description',\r\n    icon: 'üçΩÔ∏è'\r\n  }\r\n\r\n  it('renders the title', () => {\r\n    const { container } = render(<ModuleHeader {...defaultProps} />)\r\n    \r\n    // Container'da title metni var mƒ± kontrol et\r\n    expect(container.textContent).toContain('Test Module')\r\n  })\r\n\r\n  it('renders the subtitle when provided', () => {\r\n    render(<ModuleHeader {...defaultProps} />)\r\n    \r\n    const subtitle = screen.getByText('Test module description')\r\n    expect(subtitle).toBeInTheDocument()\r\n  })\r\n\r\n  it('renders the icon when provided', () => {\r\n    const { container } = render(<ModuleHeader {...defaultProps} />)\r\n    \r\n    // Container'da hem title hem icon var mƒ± kontrol et\r\n    expect(container.textContent).toContain('Test Module')\r\n    expect(container.textContent).toContain('üçΩÔ∏è')\r\n  })\r\n\r\n  it('does not render subtitle when not provided', () => {\r\n    render(<ModuleHeader title=\"Test Module\" icon=\"üçΩÔ∏è\" />)\r\n    \r\n    const subtitle = screen.queryByText('Test module description')\r\n    expect(subtitle).not.toBeInTheDocument()\r\n  })\r\n\r\n  it('renders children when provided', () => {\r\n    render(\r\n      <ModuleHeader {...defaultProps}>\r\n        <button>Test Button</button>\r\n      </ModuleHeader>\r\n    )\r\n    \r\n    const button = screen.getByRole('button', { name: 'Test Button' })\r\n    expect(button).toBeInTheDocument()\r\n  })\r\n\r\n  it('renders without icon when not provided', () => {\r\n    const { container } = render(<ModuleHeader title=\"Test Module\" subtitle=\"Test description\" />)\r\n    \r\n    // Container'da title var ama icon yok\r\n    expect(container.textContent).toContain('Test Module')\r\n    expect(container.textContent).not.toContain('üçΩÔ∏è')\r\n  })\r\n}) "],"names":["describe","defaultProps","title","subtitle","icon","it","container","render","ModuleHeader","expect","textContent","toContain","screen","getByText","toBeInTheDocument","queryByText","not","button","getByRole","name"],"mappings":";;;;;uBAA+B;qEACN;;;;;;AAEzBA,SAAS,gBAAgB;IACvB,MAAMC,eAAe;QACnBC,OAAO;QACPC,UAAU;QACVC,MAAM;IACR;IAEAC,GAAG,qBAAqB;QACtB,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;YAAE,GAAGP,YAAY;;QAE3D,6CAA6C;QAC7CQ,OAAOH,UAAUI,WAAW,EAAEC,SAAS,CAAC;IAC1C;IAEAN,GAAG,sCAAsC;QACvCE,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;YAAE,GAAGP,YAAY;;QAErC,MAAME,WAAWS,aAAM,CAACC,SAAS,CAAC;QAClCJ,OAAON,UAAUW,iBAAiB;IACpC;IAEAT,GAAG,kCAAkC;QACnC,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;YAAE,GAAGP,YAAY;;QAE3D,oDAAoD;QACpDQ,OAAOH,UAAUI,WAAW,EAAEC,SAAS,CAAC;QACxCF,OAAOH,UAAUI,WAAW,EAAEC,SAAS,CAAC;IAC1C;IAEAN,GAAG,8CAA8C;QAC/CE,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;YAACN,OAAM;YAAcE,MAAK;;QAE9C,MAAMD,WAAWS,aAAM,CAACG,WAAW,CAAC;QACpCN,OAAON,UAAUa,GAAG,CAACF,iBAAiB;IACxC;IAEAT,GAAG,kCAAkC;QACnCE,IAAAA,aAAM,gBACJ,qBAACC,qBAAY;YAAE,GAAGP,YAAY;sBAC5B,cAAA,qBAACgB;0BAAO;;;QAIZ,MAAMA,SAASL,aAAM,CAACM,SAAS,CAAC,UAAU;YAAEC,MAAM;QAAc;QAChEV,OAAOQ,QAAQH,iBAAiB;IAClC;IAEAT,GAAG,0CAA0C;QAC3C,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,aAAM,gBAAC,qBAACC,qBAAY;YAACN,OAAM;YAAcC,UAAS;;QAExE,sCAAsC;QACtCM,OAAOH,UAAUI,WAAW,EAAEC,SAAS,CAAC;QACxCF,OAAOH,UAAUI,WAAW,EAAEM,GAAG,CAACL,SAAS,CAAC;IAC9C;AACF"}