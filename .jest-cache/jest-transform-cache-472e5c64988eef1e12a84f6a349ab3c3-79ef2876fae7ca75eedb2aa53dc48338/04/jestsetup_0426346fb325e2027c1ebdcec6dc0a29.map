{"version":3,"sources":["/workspace/jest.setup.js"],"sourcesContent":["import '@testing-library/jest-dom'\n\n// Mock fetch API for tests\nglobal.fetch = jest.fn()\n\n// Mock Request and Response for API tests\nglobal.Request = class Request {\n  constructor(url, options = {}) {\n    this.url = url\n    this.method = options.method || 'GET'\n    this.headers = new Map(Object.entries(options.headers || {}))\n    this.body = options.body\n  }\n}\n\nglobal.Response = class Response {\n  constructor(body, options = {}) {\n    this.body = body\n    this.status = options.status || 200\n    this.statusText = options.statusText || 'OK'\n    this.headers = new Map(Object.entries(options.headers || {}))\n  }\n\n  async json() {\n    return typeof this.body === 'string' ? JSON.parse(this.body) : this.body\n  }\n\n  async text() {\n    return typeof this.body === 'string' ? this.body : JSON.stringify(this.body)\n  }\n}\n\n// Mock Next.js router\njest.mock('next/router', () => ({\n  useRouter() {\n    return {\n      route: '/',\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn().mockResolvedValue(undefined),\n      beforePopState: jest.fn(),\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n      isFallback: false,\n    }\n  },\n}))\n\n// Mock Next.js navigation\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n    }\n  },\n  useSearchParams() {\n    return new URLSearchParams()\n  },\n  usePathname() {\n    return '/'\n  },\n}))\n\n// Mock tRPC\njest.mock('@/lib/trpc', () => ({\n  api: {\n    useQuery: jest.fn(),\n    useMutation: jest.fn(),\n  },\n}))\n\n// Mock Prisma with comprehensive methods\njest.mock('@prisma/client', () => ({\n  PrismaClient: jest.fn().mockImplementation(() => ({\n    $connect: jest.fn(),\n    $disconnect: jest.fn(),\n    $queryRaw: jest.fn().mockResolvedValue([{ result: 'ok' }]),\n    $executeRaw: jest.fn().mockResolvedValue(1),\n    $transaction: jest.fn().mockImplementation((callback) => callback()),\n    user: {\n      findMany: jest.fn().mockResolvedValue([]),\n      findUnique: jest.fn().mockResolvedValue(null),\n      create: jest.fn().mockResolvedValue({}),\n      update: jest.fn().mockResolvedValue({}),\n      delete: jest.fn().mockResolvedValue({}),\n    },\n    menu: {\n      findMany: jest.fn().mockResolvedValue([]),\n      findUnique: jest.fn().mockResolvedValue(null),\n      create: jest.fn().mockResolvedValue({}),\n      update: jest.fn().mockResolvedValue({}),\n      delete: jest.fn().mockResolvedValue({}),\n    },\n    category: {\n      findMany: jest.fn().mockResolvedValue([]),\n      findUnique: jest.fn().mockResolvedValue(null),\n      create: jest.fn().mockResolvedValue({}),\n      update: jest.fn().mockResolvedValue({}),\n      delete: jest.fn().mockResolvedValue({}),\n    },\n    item: {\n      findMany: jest.fn().mockResolvedValue([]),\n      findUnique: jest.fn().mockResolvedValue(null),\n      create: jest.fn().mockResolvedValue({}),\n      update: jest.fn().mockResolvedValue({}),\n      delete: jest.fn().mockResolvedValue({}),\n    },\n  })),\n}))\n\n// Mock Supabase\njest.mock('@supabase/supabase-js', () => ({\n  createClient: jest.fn(() => ({\n    auth: {\n      signIn: jest.fn(),\n      signOut: jest.fn(),\n      getUser: jest.fn(),\n    },\n    from: jest.fn(() => ({\n      select: jest.fn().mockReturnThis(),\n      insert: jest.fn().mockReturnThis(),\n      update: jest.fn().mockReturnThis(),\n      delete: jest.fn().mockReturnThis(),\n      eq: jest.fn().mockReturnThis(),\n      single: jest.fn(),\n      then: jest.fn(),\n    })),\n  })),\n})) "],"names":["jest","mock","useRouter","route","pathname","query","asPath","push","fn","pop","reload","back","prefetch","mockResolvedValue","undefined","beforePopState","events","on","off","emit","isFallback","replace","forward","refresh","useSearchParams","URLSearchParams","usePathname","api","useQuery","useMutation","PrismaClient","mockImplementation","$connect","$disconnect","$queryRaw","result","$executeRaw","$transaction","callback","user","findMany","findUnique","create","update","delete","menu","category","item","createClient","auth","signIn","signOut","getUser","from","select","mockReturnThis","insert","eq","single","then","global","fetch","Request","url","options","method","headers","Map","Object","entries","body","Response","status","statusText","json","JSON","parse","text","stringify"],"mappings":"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"}