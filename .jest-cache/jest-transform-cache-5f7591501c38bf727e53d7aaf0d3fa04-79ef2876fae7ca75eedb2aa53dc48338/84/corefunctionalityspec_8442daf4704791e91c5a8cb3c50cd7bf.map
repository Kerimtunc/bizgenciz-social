{"version":3,"sources":["C:\\kod\\yemekzen\\tests\\e2e\\core-functionality.spec.ts"],"sourcesContent":["import { test, expect } from '@playwright/test';\r\n\r\n/**\r\n * 🛡️ YemekZen Core Functionality E2E Tests\r\n * \r\n * Bu test suite şu ana kadar yapılan tüm özellikleri kapsar:\r\n * - Supabase bağlantısı\r\n * - Prisma schema doğruluğu\r\n * - Environment konfigürasyonu\r\n * - API endpoint'leri\r\n * - UI component'leri\r\n * - Database işlemleri\r\n */\r\n\r\ntest.describe('🔧 Core System Tests', () => {\r\n  test.beforeEach(async ({ page }) => {\r\n    // Her test öncesi ana sayfaya git\r\n    await page.goto('http://localhost:3001');\r\n  });\r\n\r\n  test('✅ Ana Sayfa Yükleniyor ve Temel UI Çalışıyor', async ({ page }) => {\r\n    // Ana sayfa yükleniyor mu?\r\n    await expect(page).toHaveTitle(/YemekZen/);\r\n    \r\n    // Temel UI elementleri var mı?\r\n    await expect(page.locator('h1')).toContainText('YemekZen QR Menu Elite Edition');\r\n    \r\n    // Health check linki çalışıyor mu?\r\n    const healthLink = page.locator('a[href=\"/api/health\"]');\r\n    await expect(healthLink).toBeVisible();\r\n    \r\n    // Admin panel linki çalışıyor mu?\r\n    const adminLink = page.locator('a[href=\"/panel\"]');\r\n    await expect(adminLink).toBeVisible();\r\n  });\r\n\r\n  test('🔍 Health Check API Çalışıyor', async ({ page }) => {\r\n    // Health check endpoint'ine git\r\n    await page.goto('http://localhost:3001/api/health');\r\n    \r\n    // JSON response'u kontrol et\r\n    const response = await page.waitForResponse('**/api/health');\r\n    const data = await response.json();\r\n    \r\n    // Temel health check alanları var mı?\r\n    expect(data).toHaveProperty('status');\r\n    expect(data).toHaveProperty('timestamp');\r\n    expect(data).toHaveProperty('version');\r\n    expect(data).toHaveProperty('environment');\r\n    expect(data).toHaveProperty('database');\r\n    \r\n    // Status healthy mi?\r\n    expect(data.status).toBe('healthy');\r\n    \r\n    // Database connected mi?\r\n    expect(data.database).toBe('connected');\r\n  });\r\n\r\n  test('🛠️ Admin Panel Erişilebilir ve Temel UI Çalışıyor', async ({ page }) => {\r\n    // Admin panel'e git\r\n    await page.goto('http://localhost:3001/panel');\r\n    \r\n    // Admin panel yükleniyor mu?\r\n    await expect(page.locator('h1, h2')).toContainText(/Admin Panel|YemekZen/);\r\n    \r\n    // Temel metrik kartları var mı?\r\n    const metricCards = page.locator('.bg-white.rounded-lg.shadow-md');\r\n    await expect(metricCards).toHaveCount(4); // 4 metrik kartı\r\n    \r\n    // Hızlı işlem butonları var mı?\r\n    const quickActions = page.locator('button:has-text(\"Ekle\")');\r\n    await expect(quickActions).toHaveCount(3); // 3 hızlı işlem butonu\r\n  });\r\n\r\n  test('📊 Prisma Studio Erişilebilir', async ({ page }) => {\r\n    // Prisma Studio'ya git (5557 portunda çalışıyor)\r\n    await page.goto('http://localhost:5557');\r\n    \r\n    // Prisma Studio yükleniyor mu?\r\n    await expect(page.locator('body')).toBeVisible();\r\n    \r\n    // Temel Prisma Studio elementleri var mı?\r\n    const studioContent = page.locator('body');\r\n    await expect(studioContent).toBeVisible();\r\n  });\r\n});\r\n\r\ntest.describe('🗄️ Database Integration Tests', () => {\r\n  test('✅ Supabase Bağlantısı Aktif', async ({ page }) => {\r\n    // Environment değişkenlerini kontrol et\r\n    const response = await page.request.get('http://localhost:3001/api/health');\r\n    const data = await response.json();\r\n    \r\n    // Database bağlantısı çalışıyor mu?\r\n    expect(data.database).toBe('connected');\r\n    \r\n    // Environment bilgileri doğru mu?\r\n    expect(data.environment).toBe('development');\r\n  });\r\n\r\n  test('📋 Database Schema Doğruluğu', async ({ page }) => {\r\n    // Prisma Studio'da schema kontrolü\r\n    await page.goto('http://localhost:5557');\r\n    \r\n    // Temel tablolar var mı?\r\n    const expectedTables = [\r\n      'tenants', 'users', 'business_profiles', \r\n      'categories', 'products', 'orders', \r\n      'order_items', 'tables', 'customers'\r\n    ];\r\n    \r\n    // Bu test Prisma Studio'da manuel kontrol gerektirir\r\n    // Gerçek uygulamada API endpoint'leri ile kontrol edilir\r\n    expect(expectedTables.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n\r\ntest.describe('🔧 Environment Configuration Tests', () => {\r\n  test('✅ Environment Değişkenleri Doğru Yükleniyor', async ({ page }) => {\r\n    // Health check'ten environment bilgilerini al\r\n    const response = await page.request.get('http://localhost:3001/api/health');\r\n    const data = await response.json();\r\n    \r\n    // Temel environment kontrolleri\r\n    expect(data).toHaveProperty('environment');\r\n    expect(data).toHaveProperty('version');\r\n    expect(data).toHaveProperty('uptime');\r\n    \r\n    // Environment development modunda mı?\r\n    expect(data.environment).toBe('development');\r\n  });\r\n\r\n  test('🔐 Supabase Konfigürasyonu Doğru', async ({ page }) => {\r\n    // Supabase bağlantısını test et\r\n    const response = await page.request.get('http://localhost:3001/api/health');\r\n    const data = await response.json();\r\n    \r\n    // Database bağlantısı aktif mi?\r\n    expect(data.database).toBe('connected');\r\n    \r\n    // Memory kullanımı normal mi?\r\n    expect(data).toHaveProperty('memory');\r\n    expect(data.memory).toBeDefined();\r\n  });\r\n});\r\n\r\ntest.describe('🎨 UI Component Tests', () => {\r\n  test('✅ ModuleHeader Component Çalışıyor', async ({ page }) => {\r\n    // Admin panel'e git (ModuleHeader kullanıyor)\r\n    await page.goto('http://localhost:3001/panel');\r\n    \r\n    // ModuleHeader elementleri var mı?\r\n    const header = page.locator('.bg-white.border.border-orange-200');\r\n    await expect(header).toBeVisible();\r\n    \r\n    // Header içeriği doğru mu?\r\n    const title = page.locator('.text-lg.font-semibold');\r\n    await expect(title).toBeVisible();\r\n  });\r\n\r\n  test('📊 Metrik Kartları Responsive', async ({ page }) => {\r\n    // Admin panel'e git\r\n    await page.goto('http://localhost:3001/panel');\r\n    \r\n    // Metrik kartları var mı?\r\n    const metricCards = page.locator('.bg-white.rounded-lg.shadow-md');\r\n    await expect(metricCards).toHaveCount(4);\r\n    \r\n    // Mobil responsive test\r\n    await page.setViewportSize({ width: 375, height: 667 });\r\n    await expect(metricCards.first()).toBeVisible();\r\n    \r\n    // Desktop responsive test\r\n    await page.setViewportSize({ width: 1920, height: 1080 });\r\n    await expect(metricCards.first()).toBeVisible();\r\n  });\r\n});\r\n\r\ntest.describe('🚀 Performance Tests', () => {\r\n  test('⚡ Ana Sayfa Hızlı Yükleniyor', async ({ page }) => {\r\n    const startTime = Date.now();\r\n    \r\n    await page.goto('http://localhost:3001');\r\n    \r\n    const loadTime = Date.now() - startTime;\r\n    \r\n    // Sayfa 3 saniyede yüklenmeli\r\n    expect(loadTime).toBeLessThan(3000);\r\n    \r\n    // Sayfa tamamen yüklendi mi?\r\n    await expect(page.locator('body')).toBeVisible();\r\n  });\r\n\r\n  test('⚡ Health Check API Hızlı Yanıt Veriyor', async ({ page }) => {\r\n    const startTime = Date.now();\r\n    \r\n    const response = await page.request.get('http://localhost:3001/api/health');\r\n    \r\n    const responseTime = Date.now() - startTime;\r\n    \r\n    // API 1 saniyede yanıt vermeli\r\n    expect(responseTime).toBeLessThan(1000);\r\n    \r\n    // Response başarılı mı?\r\n    expect(response.status()).toBe(200);\r\n  });\r\n});\r\n\r\ntest.describe('🛡️ Error Handling Tests', () => {\r\n  test('❌ 404 Sayfası Doğru Çalışıyor', async ({ page }) => {\r\n    // Var olmayan sayfaya git\r\n    await page.goto('http://localhost:3001/nonexistent-page');\r\n    \r\n    // 404 sayfası yükleniyor mu?\r\n    await expect(page.locator('body')).toBeVisible();\r\n  });\r\n\r\n  test('❌ API Error Handling', async ({ page }) => {\r\n    // Var olmayan API endpoint'ine git\r\n    const response = await page.request.get('http://localhost:3001/api/nonexistent');\r\n    \r\n    // 404 response alıyor muyuz?\r\n    expect(response.status()).toBe(404);\r\n  });\r\n});\r\n\r\ntest.describe('🔍 Cross-Browser Tests', () => {\r\n  test('🌐 Chrome, Firefox, Safari Uyumluluğu', async ({ page }) => {\r\n    // Ana sayfa tüm browser'larda çalışıyor mu?\r\n    await page.goto('http://localhost:3001');\r\n    \r\n    // Temel elementler tüm browser'larda görünüyor mu?\r\n    await expect(page.locator('h1')).toBeVisible();\r\n    await expect(page.locator('a[href=\"/api/health\"]')).toBeVisible();\r\n    await expect(page.locator('a[href=\"/panel\"]')).toBeVisible();\r\n  });\r\n});\r\n\r\ntest.describe('📱 Mobile Responsive Tests', () => {\r\n  test('📱 Mobil Cihazlarda UI Doğru Görünüyor', async ({ page }) => {\r\n    // Mobil viewport ayarla\r\n    await page.setViewportSize({ width: 375, height: 667 });\r\n    \r\n    await page.goto('http://localhost:3001');\r\n    \r\n    // Mobilde temel elementler görünüyor mu?\r\n    await expect(page.locator('h1')).toBeVisible();\r\n    \r\n    // Admin panel'e git\r\n    await page.goto('http://localhost:3001/panel');\r\n    \r\n    // Mobilde admin panel çalışıyor mu?\r\n    await expect(page.locator('.bg-white.rounded-lg.shadow-md')).toBeVisible();\r\n  });\r\n}); "],"names":["test","describe","beforeEach","page","goto","expect","toHaveTitle","locator","toContainText","healthLink","toBeVisible","adminLink","response","waitForResponse","data","json","toHaveProperty","status","toBe","database","metricCards","toHaveCount","quickActions","studioContent","request","get","environment","expectedTables","length","toBeGreaterThan","memory","toBeDefined","header","title","setViewportSize","width","height","first","startTime","Date","now","loadTime","toBeLessThan","responseTime"],"mappings":"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"}