b15ea0b48dacd08a55816562c65eefce
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _test = require("@playwright/test");
/**
 * 🛡️ YemekZen Core Functionality E2E Tests
 * 
 * Bu test suite şu ana kadar yapılan tüm özellikleri kapsar:
 * - Supabase bağlantısı
 * - Prisma schema doğruluğu
 * - Environment konfigürasyonu
 * - API endpoint'leri
 * - UI component'leri
 * - Database işlemleri
 */ _test.test.describe('🔧 Core System Tests', ()=>{
    _test.test.beforeEach(async ({ page })=>{
        // Her test öncesi ana sayfaya git
        await page.goto('http://localhost:3001');
    });
    (0, _test.test)('✅ Ana Sayfa Yükleniyor ve Temel UI Çalışıyor', async ({ page })=>{
        // Ana sayfa yükleniyor mu?
        await (0, _test.expect)(page).toHaveTitle(/YemekZen/);
        // Temel UI elementleri var mı?
        await (0, _test.expect)(page.locator('h1')).toContainText('YemekZen QR Menu Elite Edition');
        // Health check linki çalışıyor mu?
        const healthLink = page.locator('a[href="/api/health"]');
        await (0, _test.expect)(healthLink).toBeVisible();
        // Admin panel linki çalışıyor mu?
        const adminLink = page.locator('a[href="/panel"]');
        await (0, _test.expect)(adminLink).toBeVisible();
    });
    (0, _test.test)('🔍 Health Check API Çalışıyor', async ({ page })=>{
        // Health check endpoint'ine git
        await page.goto('http://localhost:3001/api/health');
        // JSON response'u kontrol et
        const response = await page.waitForResponse('**/api/health');
        const data = await response.json();
        // Temel health check alanları var mı?
        (0, _test.expect)(data).toHaveProperty('status');
        (0, _test.expect)(data).toHaveProperty('timestamp');
        (0, _test.expect)(data).toHaveProperty('version');
        (0, _test.expect)(data).toHaveProperty('environment');
        (0, _test.expect)(data).toHaveProperty('database');
        // Status healthy mi?
        (0, _test.expect)(data.status).toBe('healthy');
        // Database connected mi?
        (0, _test.expect)(data.database).toBe('connected');
    });
    (0, _test.test)('🛠️ Admin Panel Erişilebilir ve Temel UI Çalışıyor', async ({ page })=>{
        // Admin panel'e git
        await page.goto('http://localhost:3001/panel');
        // Admin panel yükleniyor mu?
        await (0, _test.expect)(page.locator('h1, h2')).toContainText(/Admin Panel|YemekZen/);
        // Temel metrik kartları var mı?
        const metricCards = page.locator('.bg-white.rounded-lg.shadow-md');
        await (0, _test.expect)(metricCards).toHaveCount(4); // 4 metrik kartı
        // Hızlı işlem butonları var mı?
        const quickActions = page.locator('button:has-text("Ekle")');
        await (0, _test.expect)(quickActions).toHaveCount(3); // 3 hızlı işlem butonu
    });
    (0, _test.test)('📊 Prisma Studio Erişilebilir', async ({ page })=>{
        // Prisma Studio'ya git (5557 portunda çalışıyor)
        await page.goto('http://localhost:5557');
        // Prisma Studio yükleniyor mu?
        await (0, _test.expect)(page.locator('body')).toBeVisible();
        // Temel Prisma Studio elementleri var mı?
        const studioContent = page.locator('body');
        await (0, _test.expect)(studioContent).toBeVisible();
    });
});
_test.test.describe('🗄️ Database Integration Tests', ()=>{
    (0, _test.test)('✅ Supabase Bağlantısı Aktif', async ({ page })=>{
        // Environment değişkenlerini kontrol et
        const response = await page.request.get('http://localhost:3001/api/health');
        const data = await response.json();
        // Database bağlantısı çalışıyor mu?
        (0, _test.expect)(data.database).toBe('connected');
        // Environment bilgileri doğru mu?
        (0, _test.expect)(data.environment).toBe('development');
    });
    (0, _test.test)('📋 Database Schema Doğruluğu', async ({ page })=>{
        // Prisma Studio'da schema kontrolü
        await page.goto('http://localhost:5557');
        // Temel tablolar var mı?
        const expectedTables = [
            'tenants',
            'users',
            'business_profiles',
            'categories',
            'products',
            'orders',
            'order_items',
            'tables',
            'customers'
        ];
        // Bu test Prisma Studio'da manuel kontrol gerektirir
        // Gerçek uygulamada API endpoint'leri ile kontrol edilir
        (0, _test.expect)(expectedTables.length).toBeGreaterThan(0);
    });
});
_test.test.describe('🔧 Environment Configuration Tests', ()=>{
    (0, _test.test)('✅ Environment Değişkenleri Doğru Yükleniyor', async ({ page })=>{
        // Health check'ten environment bilgilerini al
        const response = await page.request.get('http://localhost:3001/api/health');
        const data = await response.json();
        // Temel environment kontrolleri
        (0, _test.expect)(data).toHaveProperty('environment');
        (0, _test.expect)(data).toHaveProperty('version');
        (0, _test.expect)(data).toHaveProperty('uptime');
        // Environment development modunda mı?
        (0, _test.expect)(data.environment).toBe('development');
    });
    (0, _test.test)('🔐 Supabase Konfigürasyonu Doğru', async ({ page })=>{
        // Supabase bağlantısını test et
        const response = await page.request.get('http://localhost:3001/api/health');
        const data = await response.json();
        // Database bağlantısı aktif mi?
        (0, _test.expect)(data.database).toBe('connected');
        // Memory kullanımı normal mi?
        (0, _test.expect)(data).toHaveProperty('memory');
        (0, _test.expect)(data.memory).toBeDefined();
    });
});
_test.test.describe('🎨 UI Component Tests', ()=>{
    (0, _test.test)('✅ ModuleHeader Component Çalışıyor', async ({ page })=>{
        // Admin panel'e git (ModuleHeader kullanıyor)
        await page.goto('http://localhost:3001/panel');
        // ModuleHeader elementleri var mı?
        const header = page.locator('.bg-white.border.border-orange-200');
        await (0, _test.expect)(header).toBeVisible();
        // Header içeriği doğru mu?
        const title = page.locator('.text-lg.font-semibold');
        await (0, _test.expect)(title).toBeVisible();
    });
    (0, _test.test)('📊 Metrik Kartları Responsive', async ({ page })=>{
        // Admin panel'e git
        await page.goto('http://localhost:3001/panel');
        // Metrik kartları var mı?
        const metricCards = page.locator('.bg-white.rounded-lg.shadow-md');
        await (0, _test.expect)(metricCards).toHaveCount(4);
        // Mobil responsive test
        await page.setViewportSize({
            width: 375,
            height: 667
        });
        await (0, _test.expect)(metricCards.first()).toBeVisible();
        // Desktop responsive test
        await page.setViewportSize({
            width: 1920,
            height: 1080
        });
        await (0, _test.expect)(metricCards.first()).toBeVisible();
    });
});
_test.test.describe('🚀 Performance Tests', ()=>{
    (0, _test.test)('⚡ Ana Sayfa Hızlı Yükleniyor', async ({ page })=>{
        const startTime = Date.now();
        await page.goto('http://localhost:3001');
        const loadTime = Date.now() - startTime;
        // Sayfa 3 saniyede yüklenmeli
        (0, _test.expect)(loadTime).toBeLessThan(3000);
        // Sayfa tamamen yüklendi mi?
        await (0, _test.expect)(page.locator('body')).toBeVisible();
    });
    (0, _test.test)('⚡ Health Check API Hızlı Yanıt Veriyor', async ({ page })=>{
        const startTime = Date.now();
        const response = await page.request.get('http://localhost:3001/api/health');
        const responseTime = Date.now() - startTime;
        // API 1 saniyede yanıt vermeli
        (0, _test.expect)(responseTime).toBeLessThan(1000);
        // Response başarılı mı?
        (0, _test.expect)(response.status()).toBe(200);
    });
});
_test.test.describe('🛡️ Error Handling Tests', ()=>{
    (0, _test.test)('❌ 404 Sayfası Doğru Çalışıyor', async ({ page })=>{
        // Var olmayan sayfaya git
        await page.goto('http://localhost:3001/nonexistent-page');
        // 404 sayfası yükleniyor mu?
        await (0, _test.expect)(page.locator('body')).toBeVisible();
    });
    (0, _test.test)('❌ API Error Handling', async ({ page })=>{
        // Var olmayan API endpoint'ine git
        const response = await page.request.get('http://localhost:3001/api/nonexistent');
        // 404 response alıyor muyuz?
        (0, _test.expect)(response.status()).toBe(404);
    });
});
_test.test.describe('🔍 Cross-Browser Tests', ()=>{
    (0, _test.test)('🌐 Chrome, Firefox, Safari Uyumluluğu', async ({ page })=>{
        // Ana sayfa tüm browser'larda çalışıyor mu?
        await page.goto('http://localhost:3001');
        // Temel elementler tüm browser'larda görünüyor mu?
        await (0, _test.expect)(page.locator('h1')).toBeVisible();
        await (0, _test.expect)(page.locator('a[href="/api/health"]')).toBeVisible();
        await (0, _test.expect)(page.locator('a[href="/panel"]')).toBeVisible();
    });
});
_test.test.describe('📱 Mobile Responsive Tests', ()=>{
    (0, _test.test)('📱 Mobil Cihazlarda UI Doğru Görünüyor', async ({ page })=>{
        // Mobil viewport ayarla
        await page.setViewportSize({
            width: 375,
            height: 667
        });
        await page.goto('http://localhost:3001');
        // Mobilde temel elementler görünüyor mu?
        await (0, _test.expect)(page.locator('h1')).toBeVisible();
        // Admin panel'e git
        await page.goto('http://localhost:3001/panel');
        // Mobilde admin panel çalışıyor mu?
        await (0, _test.expect)(page.locator('.bg-white.rounded-lg.shadow-md')).toBeVisible();
    });
});

//# sourceMappingURL=data:application/json;base64,