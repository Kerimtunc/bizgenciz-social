2038f15e6cdd0ffbac38a3084a6cc476
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _ModuleHeader = /*#__PURE__*/ _interop_require_default(require("../../components/common/ModuleHeader"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('ModuleHeader', ()=>{
    const defaultProps = {
        title: 'Test Module',
        subtitle: 'Test module description',
        icon: 'üçΩÔ∏è'
    };
    it('renders the title', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        const title = _react.screen.getByText('Test Module');
        expect(title).toBeInTheDocument();
    });
    it('renders the subtitle when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        const subtitle = _react.screen.getByText('Test module description');
        expect(subtitle).toBeInTheDocument();
    });
    it('renders the icon when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        // Icon'un varlƒ±ƒüƒ±nƒ± kontrol etmek i√ßin getAllByText kullanƒ±yoruz
        const titleElements = _react.screen.getAllByText('Test Module');
        expect(titleElements.length).toBeGreaterThan(0);
        // En az bir element'te icon olmalƒ±
        const hasIcon = titleElements.some((element)=>element.textContent?.includes('üçΩÔ∏è'));
        expect(hasIcon).toBe(true);
    });
    it('does not render subtitle when not provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            title: "Test Module",
            icon: "\uD83C\uDF7DÔ∏è"
        }));
        const subtitle = _react.screen.queryByText('Test module description');
        expect(subtitle).not.toBeInTheDocument();
    });
    it('renders children when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                children: "Test Button"
            })
        }));
        const button = _react.screen.getByRole('button', {
            name: 'Test Button'
        });
        expect(button).toBeInTheDocument();
    });
    it('renders without icon when not provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            title: "Test Module",
            subtitle: "Test description"
        }));
        const titleElement = _react.screen.getByText('Test Module');
        expect(titleElement).toBeInTheDocument();
        // Icon olmamalƒ±
        const iconElement = _react.screen.queryByText('üçΩÔ∏è');
        expect(iconElement).not.toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxrb2RcXHllbWVremVuXFx0ZXN0c1xcY29tcG9uZW50c1xcTW9kdWxlSGVhZGVyLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcclxuaW1wb3J0IE1vZHVsZUhlYWRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbW1vbi9Nb2R1bGVIZWFkZXInXHJcblxyXG5kZXNjcmliZSgnTW9kdWxlSGVhZGVyJywgKCkgPT4ge1xyXG4gIGNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcclxuICAgIHRpdGxlOiAnVGVzdCBNb2R1bGUnLFxyXG4gICAgc3VidGl0bGU6ICdUZXN0IG1vZHVsZSBkZXNjcmlwdGlvbicsXHJcbiAgICBpY29uOiAn8J+Nve+4jydcclxuICB9XHJcblxyXG4gIGl0KCdyZW5kZXJzIHRoZSB0aXRsZScsICgpID0+IHtcclxuICAgIHJlbmRlcig8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxyXG4gICAgXHJcbiAgICBjb25zdCB0aXRsZSA9IHNjcmVlbi5nZXRCeVRleHQoJ1Rlc3QgTW9kdWxlJylcclxuICAgIGV4cGVjdCh0aXRsZSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcblxyXG4gIGl0KCdyZW5kZXJzIHRoZSBzdWJ0aXRsZSB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xyXG4gICAgcmVuZGVyKDxNb2R1bGVIZWFkZXIgey4uLmRlZmF1bHRQcm9wc30gLz4pXHJcbiAgICBcclxuICAgIGNvbnN0IHN1YnRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dCgnVGVzdCBtb2R1bGUgZGVzY3JpcHRpb24nKVxyXG4gICAgZXhwZWN0KHN1YnRpdGxlKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgfSlcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGljb24gd2hlbiBwcm92aWRlZCcsICgpID0+IHtcclxuICAgIHJlbmRlcig8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxyXG4gICAgXHJcbiAgICAvLyBJY29uJ3VuIHZhcmzEscSfxLFuxLEga29udHJvbCBldG1layBpw6dpbiBnZXRBbGxCeVRleHQga3VsbGFuxLF5b3J1elxyXG4gICAgY29uc3QgdGl0bGVFbGVtZW50cyA9IHNjcmVlbi5nZXRBbGxCeVRleHQoJ1Rlc3QgTW9kdWxlJylcclxuICAgIGV4cGVjdCh0aXRsZUVsZW1lbnRzLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKDApXHJcbiAgICBcclxuICAgIC8vIEVuIGF6IGJpciBlbGVtZW50J3RlIGljb24gb2xtYWzEsVxyXG4gICAgY29uc3QgaGFzSWNvbiA9IHRpdGxlRWxlbWVudHMuc29tZShlbGVtZW50ID0+IFxyXG4gICAgICBlbGVtZW50LnRleHRDb250ZW50Py5pbmNsdWRlcygn8J+Nve+4jycpXHJcbiAgICApXHJcbiAgICBleHBlY3QoaGFzSWNvbikudG9CZSh0cnVlKVxyXG4gIH0pXHJcblxyXG4gIGl0KCdkb2VzIG5vdCByZW5kZXIgc3VidGl0bGUgd2hlbiBub3QgcHJvdmlkZWQnLCAoKSA9PiB7XHJcbiAgICByZW5kZXIoPE1vZHVsZUhlYWRlciB0aXRsZT1cIlRlc3QgTW9kdWxlXCIgaWNvbj1cIvCfjb3vuI9cIiAvPilcclxuICAgIFxyXG4gICAgY29uc3Qgc3VidGl0bGUgPSBzY3JlZW4ucXVlcnlCeVRleHQoJ1Rlc3QgbW9kdWxlIGRlc2NyaXB0aW9uJylcclxuICAgIGV4cGVjdChzdWJ0aXRsZSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICB9KVxyXG5cclxuICBpdCgncmVuZGVycyBjaGlsZHJlbiB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xyXG4gICAgcmVuZGVyKFxyXG4gICAgICA8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9PlxyXG4gICAgICAgIDxidXR0b24+VGVzdCBCdXR0b248L2J1dHRvbj5cclxuICAgICAgPC9Nb2R1bGVIZWFkZXI+XHJcbiAgICApXHJcbiAgICBcclxuICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogJ1Rlc3QgQnV0dG9uJyB9KVxyXG4gICAgZXhwZWN0KGJ1dHRvbikudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcblxyXG4gIGl0KCdyZW5kZXJzIHdpdGhvdXQgaWNvbiB3aGVuIG5vdCBwcm92aWRlZCcsICgpID0+IHtcclxuICAgIHJlbmRlcig8TW9kdWxlSGVhZGVyIHRpdGxlPVwiVGVzdCBNb2R1bGVcIiBzdWJ0aXRsZT1cIlRlc3QgZGVzY3JpcHRpb25cIiAvPilcclxuICAgIFxyXG4gICAgY29uc3QgdGl0bGVFbGVtZW50ID0gc2NyZWVuLmdldEJ5VGV4dCgnVGVzdCBNb2R1bGUnKVxyXG4gICAgZXhwZWN0KHRpdGxlRWxlbWVudCkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgXHJcbiAgICAvLyBJY29uIG9sbWFtYWzEsVxyXG4gICAgY29uc3QgaWNvbkVsZW1lbnQgPSBzY3JlZW4ucXVlcnlCeVRleHQoJ/Cfjb3vuI8nKVxyXG4gICAgZXhwZWN0KGljb25FbGVtZW50KS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcbn0pICJdLCJuYW1lcyI6WyJkZXNjcmliZSIsImRlZmF1bHRQcm9wcyIsInRpdGxlIiwic3VidGl0bGUiLCJpY29uIiwiaXQiLCJyZW5kZXIiLCJNb2R1bGVIZWFkZXIiLCJzY3JlZW4iLCJnZXRCeVRleHQiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInRpdGxlRWxlbWVudHMiLCJnZXRBbGxCeVRleHQiLCJsZW5ndGgiLCJ0b0JlR3JlYXRlclRoYW4iLCJoYXNJY29uIiwic29tZSIsImVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImluY2x1ZGVzIiwidG9CZSIsInF1ZXJ5QnlUZXh0Iiwibm90IiwiYnV0dG9uIiwiZ2V0QnlSb2xlIiwibmFtZSIsInRpdGxlRWxlbWVudCIsImljb25FbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozt1QkFBK0I7cUVBQ047Ozs7OztBQUV6QkEsU0FBUyxnQkFBZ0I7SUFDdkIsTUFBTUMsZUFBZTtRQUNuQkMsT0FBTztRQUNQQyxVQUFVO1FBQ1ZDLE1BQU07SUFDUjtJQUVBQyxHQUFHLHFCQUFxQjtRQUN0QkMsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MscUJBQVk7WUFBRSxHQUFHTixZQUFZOztRQUVyQyxNQUFNQyxRQUFRTSxhQUFNLENBQUNDLFNBQVMsQ0FBQztRQUMvQkMsT0FBT1IsT0FBT1MsaUJBQWlCO0lBQ2pDO0lBRUFOLEdBQUcsc0NBQXNDO1FBQ3ZDQyxJQUFBQSxhQUFNLGdCQUFDLHFCQUFDQyxxQkFBWTtZQUFFLEdBQUdOLFlBQVk7O1FBRXJDLE1BQU1FLFdBQVdLLGFBQU0sQ0FBQ0MsU0FBUyxDQUFDO1FBQ2xDQyxPQUFPUCxVQUFVUSxpQkFBaUI7SUFDcEM7SUFFQU4sR0FBRyxrQ0FBa0M7UUFDbkNDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLHFCQUFZO1lBQUUsR0FBR04sWUFBWTs7UUFFckMsaUVBQWlFO1FBQ2pFLE1BQU1XLGdCQUFnQkosYUFBTSxDQUFDSyxZQUFZLENBQUM7UUFDMUNILE9BQU9FLGNBQWNFLE1BQU0sRUFBRUMsZUFBZSxDQUFDO1FBRTdDLG1DQUFtQztRQUNuQyxNQUFNQyxVQUFVSixjQUFjSyxJQUFJLENBQUNDLENBQUFBLFVBQ2pDQSxRQUFRQyxXQUFXLEVBQUVDLFNBQVM7UUFFaENWLE9BQU9NLFNBQVNLLElBQUksQ0FBQztJQUN2QjtJQUVBaEIsR0FBRyw4Q0FBOEM7UUFDL0NDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLHFCQUFZO1lBQUNMLE9BQU07WUFBY0UsTUFBSzs7UUFFOUMsTUFBTUQsV0FBV0ssYUFBTSxDQUFDYyxXQUFXLENBQUM7UUFDcENaLE9BQU9QLFVBQVVvQixHQUFHLENBQUNaLGlCQUFpQjtJQUN4QztJQUVBTixHQUFHLGtDQUFrQztRQUNuQ0MsSUFBQUEsYUFBTSxnQkFDSixxQkFBQ0MscUJBQVk7WUFBRSxHQUFHTixZQUFZO3NCQUM1QixjQUFBLHFCQUFDdUI7MEJBQU87OztRQUlaLE1BQU1BLFNBQVNoQixhQUFNLENBQUNpQixTQUFTLENBQUMsVUFBVTtZQUFFQyxNQUFNO1FBQWM7UUFDaEVoQixPQUFPYyxRQUFRYixpQkFBaUI7SUFDbEM7SUFFQU4sR0FBRywwQ0FBMEM7UUFDM0NDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLHFCQUFZO1lBQUNMLE9BQU07WUFBY0MsVUFBUzs7UUFFbEQsTUFBTXdCLGVBQWVuQixhQUFNLENBQUNDLFNBQVMsQ0FBQztRQUN0Q0MsT0FBT2lCLGNBQWNoQixpQkFBaUI7UUFFdEMsZ0JBQWdCO1FBQ2hCLE1BQU1pQixjQUFjcEIsYUFBTSxDQUFDYyxXQUFXLENBQUM7UUFDdkNaLE9BQU9rQixhQUFhTCxHQUFHLENBQUNaLGlCQUFpQjtJQUMzQztBQUNGIn0=