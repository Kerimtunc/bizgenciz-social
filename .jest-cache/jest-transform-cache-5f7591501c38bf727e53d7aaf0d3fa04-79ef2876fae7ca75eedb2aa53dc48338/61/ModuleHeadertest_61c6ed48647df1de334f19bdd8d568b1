95ade60459b1e0f8b6a869a9073e1cf8
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _ModuleHeader = /*#__PURE__*/ _interop_require_default(require("../../components/common/ModuleHeader"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('ModuleHeader', ()=>{
    const defaultProps = {
        title: 'Test Module',
        subtitle: 'Test module description',
        icon: '🍽️'
    };
    it('renders the title', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        const title = _react.screen.getByText('Test Module');
        expect(title).toBeInTheDocument();
    });
    it('renders the subtitle when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        const subtitle = _react.screen.getByText('Test module description');
        expect(subtitle).toBeInTheDocument();
    });
    it('renders the icon when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps
        }));
        const icon = _react.screen.getByText('🍽️');
        expect(icon).toBeInTheDocument();
    });
    it('does not render subtitle when not provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            title: "Test Module",
            icon: "\uD83C\uDF7D️"
        }));
        const subtitle = _react.screen.queryByText('Test module description');
        expect(subtitle).not.toBeInTheDocument();
    });
    it('renders children when provided', ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ModuleHeader.default, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                children: "Test Button"
            })
        }));
        const button = _react.screen.getByRole('button', {
            name: 'Test Button'
        });
        expect(button).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxrb2RcXHllbWVremVuXFx0ZXN0c1xcY29tcG9uZW50c1xcTW9kdWxlSGVhZGVyLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcclxuaW1wb3J0IE1vZHVsZUhlYWRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL2NvbW1vbi9Nb2R1bGVIZWFkZXInXHJcblxyXG5kZXNjcmliZSgnTW9kdWxlSGVhZGVyJywgKCkgPT4ge1xyXG4gIGNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcclxuICAgIHRpdGxlOiAnVGVzdCBNb2R1bGUnLFxyXG4gICAgc3VidGl0bGU6ICdUZXN0IG1vZHVsZSBkZXNjcmlwdGlvbicsXHJcbiAgICBpY29uOiAn8J+Nve+4jydcclxuICB9XHJcblxyXG4gIGl0KCdyZW5kZXJzIHRoZSB0aXRsZScsICgpID0+IHtcclxuICAgIHJlbmRlcig8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxyXG4gICAgXHJcbiAgICBjb25zdCB0aXRsZSA9IHNjcmVlbi5nZXRCeVRleHQoJ1Rlc3QgTW9kdWxlJylcclxuICAgIGV4cGVjdCh0aXRsZSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcblxyXG4gIGl0KCdyZW5kZXJzIHRoZSBzdWJ0aXRsZSB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xyXG4gICAgcmVuZGVyKDxNb2R1bGVIZWFkZXIgey4uLmRlZmF1bHRQcm9wc30gLz4pXHJcbiAgICBcclxuICAgIGNvbnN0IHN1YnRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dCgnVGVzdCBtb2R1bGUgZGVzY3JpcHRpb24nKVxyXG4gICAgZXhwZWN0KHN1YnRpdGxlKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgfSlcclxuXHJcbiAgaXQoJ3JlbmRlcnMgdGhlIGljb24gd2hlbiBwcm92aWRlZCcsICgpID0+IHtcclxuICAgIHJlbmRlcig8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxyXG4gICAgXHJcbiAgICBjb25zdCBpY29uID0gc2NyZWVuLmdldEJ5VGV4dCgn8J+Nve+4jycpXHJcbiAgICBleHBlY3QoaWNvbikudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcblxyXG4gIGl0KCdkb2VzIG5vdCByZW5kZXIgc3VidGl0bGUgd2hlbiBub3QgcHJvdmlkZWQnLCAoKSA9PiB7XHJcbiAgICByZW5kZXIoPE1vZHVsZUhlYWRlciB0aXRsZT1cIlRlc3QgTW9kdWxlXCIgaWNvbj1cIvCfjb3vuI9cIiAvPilcclxuICAgIFxyXG4gICAgY29uc3Qgc3VidGl0bGUgPSBzY3JlZW4ucXVlcnlCeVRleHQoJ1Rlc3QgbW9kdWxlIGRlc2NyaXB0aW9uJylcclxuICAgIGV4cGVjdChzdWJ0aXRsZSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICB9KVxyXG5cclxuICBpdCgncmVuZGVycyBjaGlsZHJlbiB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xyXG4gICAgcmVuZGVyKFxyXG4gICAgICA8TW9kdWxlSGVhZGVyIHsuLi5kZWZhdWx0UHJvcHN9PlxyXG4gICAgICAgIDxidXR0b24+VGVzdCBCdXR0b248L2J1dHRvbj5cclxuICAgICAgPC9Nb2R1bGVIZWFkZXI+XHJcbiAgICApXHJcbiAgICBcclxuICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicsIHsgbmFtZTogJ1Rlc3QgQnV0dG9uJyB9KVxyXG4gICAgZXhwZWN0KGJ1dHRvbikudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gIH0pXHJcbn0pICJdLCJuYW1lcyI6WyJkZXNjcmliZSIsImRlZmF1bHRQcm9wcyIsInRpdGxlIiwic3VidGl0bGUiLCJpY29uIiwiaXQiLCJyZW5kZXIiLCJNb2R1bGVIZWFkZXIiLCJzY3JlZW4iLCJnZXRCeVRleHQiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInF1ZXJ5QnlUZXh0Iiwibm90IiwiYnV0dG9uIiwiZ2V0QnlSb2xlIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7dUJBQStCO3FFQUNOOzs7Ozs7QUFFekJBLFNBQVMsZ0JBQWdCO0lBQ3ZCLE1BQU1DLGVBQWU7UUFDbkJDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxNQUFNO0lBQ1I7SUFFQUMsR0FBRyxxQkFBcUI7UUFDdEJDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLHFCQUFZO1lBQUUsR0FBR04sWUFBWTs7UUFFckMsTUFBTUMsUUFBUU0sYUFBTSxDQUFDQyxTQUFTLENBQUM7UUFDL0JDLE9BQU9SLE9BQU9TLGlCQUFpQjtJQUNqQztJQUVBTixHQUFHLHNDQUFzQztRQUN2Q0MsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MscUJBQVk7WUFBRSxHQUFHTixZQUFZOztRQUVyQyxNQUFNRSxXQUFXSyxhQUFNLENBQUNDLFNBQVMsQ0FBQztRQUNsQ0MsT0FBT1AsVUFBVVEsaUJBQWlCO0lBQ3BDO0lBRUFOLEdBQUcsa0NBQWtDO1FBQ25DQyxJQUFBQSxhQUFNLGdCQUFDLHFCQUFDQyxxQkFBWTtZQUFFLEdBQUdOLFlBQVk7O1FBRXJDLE1BQU1HLE9BQU9JLGFBQU0sQ0FBQ0MsU0FBUyxDQUFDO1FBQzlCQyxPQUFPTixNQUFNTyxpQkFBaUI7SUFDaEM7SUFFQU4sR0FBRyw4Q0FBOEM7UUFDL0NDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLHFCQUFZO1lBQUNMLE9BQU07WUFBY0UsTUFBSzs7UUFFOUMsTUFBTUQsV0FBV0ssYUFBTSxDQUFDSSxXQUFXLENBQUM7UUFDcENGLE9BQU9QLFVBQVVVLEdBQUcsQ0FBQ0YsaUJBQWlCO0lBQ3hDO0lBRUFOLEdBQUcsa0NBQWtDO1FBQ25DQyxJQUFBQSxhQUFNLGdCQUNKLHFCQUFDQyxxQkFBWTtZQUFFLEdBQUdOLFlBQVk7c0JBQzVCLGNBQUEscUJBQUNhOzBCQUFPOzs7UUFJWixNQUFNQSxTQUFTTixhQUFNLENBQUNPLFNBQVMsQ0FBQyxVQUFVO1lBQUVDLE1BQU07UUFBYztRQUNoRU4sT0FBT0ksUUFBUUgsaUJBQWlCO0lBQ2xDO0FBQ0YifQ==