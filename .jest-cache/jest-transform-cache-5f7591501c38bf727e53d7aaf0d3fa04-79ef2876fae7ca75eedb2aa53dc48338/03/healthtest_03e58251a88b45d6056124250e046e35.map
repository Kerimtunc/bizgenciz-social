{"version":3,"sources":["C:\\kod\\yemekzen\\tests\\api\\health.test.ts"],"sourcesContent":["import { NextRequest } from 'next/server'\r\nimport { GET } from '../../app/api/health/route'\r\n\r\ndescribe('Health API', () => {\r\n  it('returns 200 status with health information', async () => {\r\n    const request = new NextRequest('http://localhost:3000/api/health')\r\n    \r\n    const response = await GET(request)\r\n    \r\n    expect(response.status).toBe(200)\r\n    \r\n    const data = await response.json()\r\n    expect(data).toHaveProperty('status')\r\n    expect(data).toHaveProperty('timestamp')\r\n    expect(data).toHaveProperty('version')\r\n    expect(data.status).toBe('healthy')\r\n  })\r\n\r\n  it('includes required health check fields', async () => {\r\n    const request = new NextRequest('http://localhost:3000/api/health')\r\n    \r\n    const response = await GET(request)\r\n    const data = await response.json()\r\n    \r\n    expect(data).toHaveProperty('database')\r\n    expect(data).toHaveProperty('uptime')\r\n    expect(data).toHaveProperty('environment')\r\n  })\r\n}) "],"names":["describe","it","request","NextRequest","response","GET","expect","status","toBe","data","json","toHaveProperty"],"mappings":";;;;wBAA4B;uBACR;AAEpBA,SAAS,cAAc;IACrBC,GAAG,8CAA8C;QAC/C,MAAMC,UAAU,IAAIC,mBAAW,CAAC;QAEhC,MAAMC,WAAW,MAAMC,IAAAA,UAAG,EAACH;QAE3BI,OAAOF,SAASG,MAAM,EAAEC,IAAI,CAAC;QAE7B,MAAMC,OAAO,MAAML,SAASM,IAAI;QAChCJ,OAAOG,MAAME,cAAc,CAAC;QAC5BL,OAAOG,MAAME,cAAc,CAAC;QAC5BL,OAAOG,MAAME,cAAc,CAAC;QAC5BL,OAAOG,KAAKF,MAAM,EAAEC,IAAI,CAAC;IAC3B;IAEAP,GAAG,yCAAyC;QAC1C,MAAMC,UAAU,IAAIC,mBAAW,CAAC;QAEhC,MAAMC,WAAW,MAAMC,IAAAA,UAAG,EAACH;QAC3B,MAAMO,OAAO,MAAML,SAASM,IAAI;QAEhCJ,OAAOG,MAAME,cAAc,CAAC;QAC5BL,OAAOG,MAAME,cAAc,CAAC;QAC5BL,OAAOG,MAAME,cAAc,CAAC;IAC9B;AACF"}