// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Tenant model
model Tenant {
  id                 Int      @id @default(autoincrement())
  tenantType         String   @map("tenant_type")
  status             String
  subscriptionStatus String   @map("subscription_status")
  commissionRate     Decimal? @map("commission_rate") @db.Decimal(10, 2)
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @default(now()) @map("updated_at")
  deletedAt          DateTime? @map("deleted_at")

  // Relations
  users             User[]
  businessProfiles  BusinessProfile[]
  categories        Category[]
  products          Product[]
  orders            Order[]
  tables            Table[]
  customers         Customer[]

  @@map("tenants")
}

// User model
model User {
  id            Int      @id @default(autoincrement())
  tenantId      Int      @map("tenant_id")
  name          String
  email         String   @unique
  phone         String?
  roleId        Int      @map("role_id")
  avatar        String?
  isActive      Boolean  @default(true) @map("is_active")
  creditBalance Decimal? @map("credit_balance") @db.Decimal(10, 2)
  loyaltyPoints Int?     @map("loyalty_points")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@map("users")
}

// Business Profile model
model BusinessProfile {
  id             Int      @id @default(autoincrement())
  tenantId       Int      @map("tenant_id")
  businessName   String   @map("business_name")
  businessType   String?  @map("business_type")
  address        String?
  phone          String?
  email          String?
  logoUrl        String?  @map("logo_url")
  primaryColor   String?  @map("primary_color")
  secondaryColor String?  @map("secondary_color")
  accentColor    String?  @map("accent_color")
  fontFamily     String?  @map("font_family")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @default(now()) @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@map("business_profiles")
}

// Category model
model Category {
  id          Int      @id @default(autoincrement())
  tenantId    Int      @map("tenant_id")
  name        String
  description String?
  imageUrl    String?  @map("image_url")
  sortOrder   Int?     @default(0) @map("sort_order")
  isActive    Boolean? @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  // Relations
  tenant   Tenant    @relation(fields: [tenantId], references: [id])
  products Product[]

  @@map("categories")
}

// Product model
model Product {
  id           Int      @id @default(autoincrement())
  tenantId     Int      @map("tenant_id")
  categoryId   Int      @map("category_id")
  name         String
  description  String?
  price        Decimal  @db.Decimal(10, 2)
  imageUrl     String?  @map("image_url")
  isAvailable  Boolean? @default(true) @map("is_available")
  isFeatured   Boolean? @default(false) @map("is_featured")
  sortOrder    Int?     @default(0) @map("sort_order")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  // Relations
  tenant     Tenant      @relation(fields: [tenantId], references: [id])
  category   Category    @relation(fields: [categoryId], references: [id])
  orderItems OrderItem[]

  @@map("products")
}

// Order model
model Order {
  id            Int      @id @default(autoincrement())
  tenantId      Int      @map("tenant_id")
  customerId    Int?     @map("customer_id")
  tableId       Int?     @map("table_id")
  orderNumber   String   @unique @map("order_number")
  status        String
  totalAmount   Decimal  @map("total_amount") @db.Decimal(10, 2)
  paymentStatus String   @map("payment_status")
  paymentMethod String?  @map("payment_method")
  notes         String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  // Relations
  tenant     Tenant      @relation(fields: [tenantId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

// Order Item model
model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int      @map("order_id")
  productId  Int      @map("product_id")
  quantity   Int
  unitPrice  Decimal  @map("unit_price") @db.Decimal(10, 2)
  totalPrice Decimal  @map("total_price") @db.Decimal(10, 2)
  notes      String?
  createdAt  DateTime @default(now()) @map("created_at")

  // Relations
  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

// Table model
model Table {
  id         Int      @id @default(autoincrement())
  tenantId   Int      @map("tenant_id")
  tableNumber String  @map("table_number")
  capacity   Int
  status     String
  qrCodeUrl  String?  @map("qr_code_url")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@map("tables")
}

// Customer model
model Customer {
  id            Int      @id @default(autoincrement())
  tenantId      Int      @map("tenant_id")
  name          String
  email         String?
  phone         String?
  loyaltyPoints Int?     @default(0) @map("loyalty_points")
  totalOrders   Int?     @default(0) @map("total_orders")
  totalSpent    Decimal? @default(0) @map("total_spent") @db.Decimal(10, 2)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  // Relations
  tenant Tenant @relation(fields: [tenantId], references: [id])

  @@map("customers")
} 