version: '3.9'

services:
  # Application - Production
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: ${PROJECT_NAME:-yemekzen}-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - DIRECT_URL=${DIRECT_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    ports:
      - "${APP_PORT_HOST:-3000}:${APP_PORT_CONTAINER:-3000}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal_network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  db:
    # TODO: replace placeholder SHA256 with verified digest from registry
    image: postgres:15.3-alpine@sha256:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
    container_name: ${PROJECT_NAME:-yemekzen}-db-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-yemekzen_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-yemekzen_password}
      POSTGRES_DB: ${POSTGRES_DB:-yemekzen_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-yemekzen_user} -d ${POSTGRES_DB:-yemekzen_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    # TODO: replace placeholder SHA256 with verified digest from registry
    image: redis:7.2-alpine@sha256:abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
    container_name: ${PROJECT_NAME:-yemekzen}-redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    # TODO: replace placeholder SHA256 with verified digest from registry
    image: nginx:1.25-alpine@sha256:7890abcdef1234567890abcdef1234567890abcdef1234567890abcdef123456
    container_name: ${PROJECT_NAME:-yemekzen}-nginx-prod
    restart: unless-stopped
    ports:
      - "${NGINX_PORT_HTTP:-80}:80"
      - "${NGINX_PORT_HTTPS:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    depends_on:
      - app
    networks:
      - internal_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  internal_network:
    driver: bridge 